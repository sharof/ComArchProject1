------ lw 0 5 immmax ///////intialize the stack pointer
------ noop @@@@@@@@@@@@@prepare to call sub ////
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 subAdr
------ jalr 4 7
------ noop @@@@@@@@@@@@@sub(a,b)
sub	nand	2 2 2
------  add     2 pos1 2
------  add     1 2 3
------ noop @@@@@@@@@@@@@end of sub(a,b), restore original variables
------ lw 0 6 pos1
------ add 5 6 5
------ lw 0 2 5
------ add 5 6 5
------ lw 0 1 5
------ add 5 6 5
------ lw 0 6 5
------ jalr 7 4
------ noop @@@@@@@@@@@@@return from sub(a,b) ////
------ noop @@@@@@@@@@@@@prepare to call bitwise or ////
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 orAdr
------ jalr 4 7
------ noop @@@@@@@@@@@@@or(a,b)
or nand	1 1 1
------ nand 2 2 2
------ nand 1 2 3
------ noop @@@@@@@@@@@@@end of or(a,b), restore original variables
------ lw 0 6 pos1
------ add 5 6 5
------ lw 0 2 5
------ add 5 6 5
------ lw 0 1 5
------ add 5 6 5
------ lw 0 6 5
------ jalr 7 4
------ noop @@@@@@@@@@@@@return from or(a,b) ////
------ noop @@@@@@@@@@@@@prepare to call bitwise and ////
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 andAdr
------ jalr 4 7
------ noop @@@@@@@@@@@@@and(a,b)
and nand 1 2 6
------ nand 6 6 3
------ noop @@@@@@@@@@@@@end of and(a,b), restore original variables
------ lw 0 6 pos1
------ add 5 6 5
------ lw 0 2 5
------ add 5 6 5
------ lw 0 1 5
------ add 5 6 5
------ lw 0 6 5
------ jalr 7 4
------ noop @@@@@@@@@@@@@return from and(a,b) ////
------ noop @@@@@@@@@@@@@prepare to call slt(a,b)
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 sltAdr
------ jalr 4 7
------ noop @@@@@@@@@@@@@slt(a,b)
slt    sw 0 6 5 ///prepare to sub(a,b)
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 subAdr
------ jalr 4 7 ///call sub(a,b)
------ lw 0 1 3 ///put that result into $1 to isNeg it
------ lw 0 4 isNegA
------ jalr 4 7  ///call isNeg(a-b)
------ add 0 3 3 ///1 if a<b, 0 if isn't
------ noop @@@@@@@@@@@@@end of slt(a,b), restore original variables
------ lw 0 6 pos1
------ add 5 6 5
------ lw 0 2 5
------ add 5 6 5
------ lw 0 1 5
------ add 5 6 5
------ lw 0 6 5
------ jalr 7 4
------ noop @@@@@@@@@@@@@return from slt(a,b) ////
------ noop @@@@@@@@@@@@@prepare to call isNeg(a) ////
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ lw 0 4 isNegA
------ jalr 4 7
------ noop @@@@@@@@@@@@@isNeg(a)
isNeg lw 0 2 immmin     ///// $1 AND with -32768
------ sw 0 6 5
------ lw 0 6 neg1
------ add 5 6 5
------ sw 0 1 5
------ add 5 6 5
------ sw 0 2 5
------ add 5 6 5
------ lw 0 4 andAdr
------ jalr 4 7          ///// $1 AND with -32768
------ lw 0 1 3
------ lw 0 6 immmin @@@@@@@if is less than zero,negative sign bit must be 1
------ beq 1 6 2
------ lw 0 3 0 @@@@@@@ return 0 is this is false
------ beq 0 0 2
------ lw 0 3 pos1 @@@@@@@ return 1 is this is true
------ noop @@@@@@@@@@@@@end of isNeg(a), restore original variables
------ lw 0 6 pos1
------ add 5 6 5
------ lw 0 1 5
------ add 5 6 5
------ lw 0 6 5
------ jalr 7 4
------ noop @@@@@@@@@@@@@return from isNeg(a) ////
------ noop
------ noop
------ noop
------ noop
------ noop
------ noop
pos1 .fill 1
pos2 .fill 2
pos3 .fill 3
pos4 .fill 4
pos5 .fill 5
neg1 .fill -1
neg2 .fill -2
neg3 .fill -3
neg4 .fill -4
neg5 .fill -5
subAdr .fill sub
orAdr .fill or
andAdr .fill and
isNegA .fill isNeg
sltAdr .fill slt
immmax .fill 32767
immmin .fill -32768